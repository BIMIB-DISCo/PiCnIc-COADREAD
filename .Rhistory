fontsize_row = 6,
fontsize_row = 6,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-npb-bootstrap.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores'),
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-sb-bootstrap.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-npb-bootstrap.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-sb-bootstrap.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
as.confidence(MSS.models, 'sb')
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
file = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
keysToNames(MSS.models, as.confidence(model, conf = 'sb')$sb$bic) * 100
keysToNames(MSS.models, as.confidence(MSS.models, conf = 'sb')$sb$bic) * 100
?"pheatmap"
dev.set
dev.size()
dev.size(units = 'cm')
dev.close()
dev.new(noRStudioGD = T)
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
dev.new(noRStudioGD = T)
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
pheatmap
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
dev.size()
?dev.new
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
#filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
# filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
#filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf')
)
dev.copy2pdf(paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
# filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
?"dev.copy2pdf"
tronco.plot
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
#filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf')
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
# filename = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf')
)
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf')
)
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d",
filename = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf')
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf'))
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
bootsrap.stat.conf = function(model, folder, ...)
{
# This is set to 100 for our paper, here we set a much lower value as computation time
# might span over many hours with NUM.BOOT.ITER = 100
NUM.BOOT.ITER = 1
# Example non-parametric and statistical bootstrap
#model = tronco.bootstrap(model, nboot = NUM.BOOT.ITER)
#model = tronco.bootstrap(model, type = "statistical", nboot = NUM.BOOT.ITER)
# As takes long to bootstrap, we make a simple visualization first
tronco.plot(model,
pathways = pathway.list,
edge.cex = 1.5,
legend.cex = .5,
scale.nodes = .6,
confidence = c('npb', 'sb'), # display bootstrap scores
pathways.color = pathways.color,
disconnected = F,
height.logic = .3,
file = paste0(folder, '/Rdata-models/model-bootstrap.pdf'),
...
)
# We also print to file the bootstrap scores
require(pheatmap)
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$bic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-bic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'npb')$npb$aic) * 100,
main = paste(folder, 'COADREAD \n non-parametric bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-npb-bootstrap-aic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$bic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for BIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-sb-bootstrap-bic.pdf'))
pheatmap(keysToNames(model, as.confidence(model, conf = 'sb')$sb$aic) * 100,
main = paste(folder, 'COADREAD \n statistical bootstrap scores for AIC model'),
fontsize_row = 6,
fontsize_col = 6,
display_numbers = T,
number_format = "%d"
)
dev.copy2pdf(file = paste0(folder, '/Rdata-models/scores-sb-bootstrap-aic.pdf'))
return(model)
}
MSS.models = bootsrap.stat.conf(MSS.models, folder = 'MSS')
MSI.models = bootsrap.stat.conf(MSI.models, folder = 'MSI')
as.selective.advantage.relations(MSS.models) # edges which contribute to MLE
as.confidence(MSS.models, 'pb')
as.confidence(MSS.models, 'pb')
as.confidence(MSS.models, 'npb')
as.confidence(MSS.models, 'sb')
as.confidence(MSS.models, 'npb')
head(as.confidence(x, conf = c('npb', 'sb')))
head(as.confidence(MSS.models, conf = c('npb')))
head(as.confidence(MSS.models, conf = c('tp')))
head(as.confidence(MSS.models, conf = c('tp')))
head(as.confidence(MSS.models, conf = c('tp')))
as?
?
asdas
?as.confidence
?as.confidence
head(as.confidence(MSS.models, conf = c('tp')))
§
head(as.confidence(MSS.models, conf = c('npb')))
names(as.confidence(MSS.models, conf = c('npb')))
str(as.confidence(MSS.models, conf = c('npb')))
str(as.confidence(MSS.models, conf = c('npb')))
z= as.confidence(MSS.models, 'npb')
z
z
names(z)
save.image("/Volumes/DATA/Work/Software/Github/PiCnIc-COADREAD/WSPACE.RData")
